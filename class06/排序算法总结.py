'''
排序算法的稳定性

稳定性是指同样大小的样本在排序之后不会改变相对次序
对基础类型来说，稳定性毫无意义
对非基础类型来说，稳定性有重要意义
有些排序算法可以实现成稳定性的，而有些排序算法无论如何都实现不成稳定的

----------

          稳定性     时间复杂度       额外空间复杂度

选择排序    无         O(N^2)         O(1)
冒泡排序    有         O(N^2)         O(1)
插入排序    有         O(N^2)         O(1)
归并排序    有         O(N*logN)      O(N)
随机快排    无         O(N*logN)      O(logN)
堆排序      无         O(N*logN)      O(1)
=====================================================
计数排序    有         O(N)           O(M)
基数排序    有         O(N)           O(N)

----------

排序算法总结
1）不基于比较的排序，对样本数据有严格要求，不易改写
2）基于比较的排序，只要规定好两个样本怎么比大小就可以直接复用
3）基于比较的排序，时间复杂度的极限是O(N*logN)
4)时间复杂度O(N*logN)、额外空间复杂度低于O(N)、且稳定的基于比较的排序是不存在的
5）为了绝对的速度快选快排、为了省空间选堆排、为了稳定性选归并

----------

常见的坑
1）归并排序的额外空间复杂度可以变成O（1），’归并排序 内部缓存法‘，但是将变得不再稳定（用堆排序不香吗）

2）’原地归并排序‘是垃圾贴（额外空间复杂度可以变成O（1）），会让时间复杂度变成O（N^2）（用插入排序不香吗）

3)快速排序稳定性改进，’01 stable sort‘，但是会对样本数据要求更多(用不基于比较的排序不香吗)

4）在整形数组中，把奇数放在数组左边，偶数放在数组右边，要求所有奇数之间原始的相对次序不变，所有偶数之间原始相对次序不变，时间复杂度做到O（N），额外空间复杂度做到O（1）----不可能实现

----------

工程上对排序的改进

1）稳定性的考虑

2）充分利用O(N*logN) 和O(N^2)排序各自的优势
'''